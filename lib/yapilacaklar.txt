const query = {
    pageSize: 100,
    pageNumber: 1,
    allHistories: false,
    izinAktifMi: null,
    referansNo: "",
    yabanciKimlikNo: "99327984056",
    ad: "",
    soyad: "",
    anaAdi: "",
    babaAdi: "",
    pasaportNo: "",
    dogumTarihi: "",
    isyeriSgkTescilNumarasi: "",
    isyeriUnvani: "",
    inBasvuruNoList: [],
    notInBasvuruNoList: [],
    inUyrukIdList: [],
    notInUyrukIdList: [],
    inBasvuruTipiList: [],
    notInBasvuruTipiList: [],
    inBasvuruTuruList: [],
    notInBasvuruTuruList: [],
    inCalismaIzniTuruList: [],
    notInCalismaIzniTuruList: [],
    inCinsiyetList: [],
    notInCinsiyetList: [],
    inEgitimDurumuList: [],
    notInEgitimDurumuList: [],
    inFirmaTipiList: [],
    notInFirmaTipiList: [],
    inGeciciKorumaStatusuList: [],
    notInGeciciKorumaStatusuList: [],
    inIslemTipiList: [],
    notInIslemTipiList: [],
    izinDurumuList: [],
    notInIzinDurumuList: [],
    inMedeniHalList: [],
    notInMedeniHalList: [],
    inPasaportTuruList: [],
    notInPasaportTuruList: [],
    inSermayeYapisiList: [],
    notInSermayeYapisiList: [],
    inTurkceSeviyesiList: [],
    notInTurkceSeviyesiList: [],
  };

  const verileriAl = async () => {
    const gelenVeri = await fetch(
      "https://services.csgb.gov.tr/workpernet/get-filtered-work-permit-data",
      {
        method: "POST",

        headers: {
          ApiKey: "d8994824-a876-458c-bae6-44g58c357aa9",
          "Content-Type": "application/json",
        },
        body: JSON.stringify(query),
      }
    ).then((response) => response.json());
    //.then((data) => console.log(data));
    //const jsonData = await gelenVeri.json();
    // console.log(jsonData);
    return gelenVeri;
  };

  const veriListele = await verileriAl();
  //console.log(session);
  return (
    <>
      {veriListele.data.content.map((a: any) => (
        <li>{a.basvuruNo}</li>
      ))}
      <h1 className="">Hayır</h1>
      <h1 className="font-space-grotesk">Hayır</h1>
    </>
  );




  const basvuruNumaralari = [
  //3087749,
  //3318631, 3371001, 3221500, 3268389, 3202921, 3169393, 3360454, 3196577,
  // 3214961, 3297234, 3315017, 3326832, 3308938, 3396876, 3302480, 3362539,
  // 3077752, 3219172, 265527, 2641465, 3258445, 3172139, 3337361, 3149389,
  // 3374960, 3047025, 3249006, 3093756, 3361890, 3300044, 3253541, 3295093,
  // 3360792, 3082477, 2995487, 3361950, 3373517, 3050364, 3300857, 3273381,
  // 124607, 2397469, 354453, 529433, 616472, 278274, 3152170, 3366424, 2805976,
  // 178339, 2882962, 134741, 3019541, 167358, 3052574, 3219213, 3169919, 3218560,
  // 3346747, 2995474, 3180586, 3356852, 3306231, 3192738, 3048410, 3377504,
  // 156356, 2965505, 3219105, 3140860, 3089906, 3386885, 3185706, 3137346,
  // 3365043, 3110515, 2651592, 485310, 3256507, 3336230, 2753218, 257701, 3198322,
  // 3150534, 163140, 2791470, 3100875, 3205438, 3376325, 3087786, 35987, 127545,
  // 3225096, 3053052, 3292989, 2619933, 3307202, 3086571, 3160867, 3294910,
  // 3205804, 3238084, 3209082, 3262160, 3345433, 3168210, 3194234, 3219234,
  // 3075215, 3360389, 3206372, 2870161, 3174622, 3262445, 360871, 2252964,
  // 3098235, 3092728, 3070025, 3032692, 3359868, 3074126, 3375421, 3053601,
  // 3189949, 3159344, 3053262, 3332157, 3322508, 3369805, 3368043, 3037542,
  // 3336486, 3088922, 3082745, 3297317, 3334095, 3045532, 3396888, 3079481,
  // 138003, 2996603, 261169, 356645, 43561, 157, 3255873, 3383040, 3059851,
  // 3209249, 3041940, 3362713, 3198338, 3150513, 3218654, 3181737, 3375149,
  // 3157532, 3103529, 3035925, 3218136, 3132477, 3146600, 3093234, 3104164,
  // 3219012, 3114155, 3355433, 3019983, 3323763, 2734083, 2777516, 3348643,
  // 3173175, 3398249, 3286675, 3169988, 3218555, 3284945, 3309253, 164724, 362391,
  // 3335471, 3256736, 3071311, 3385099, 3284791, 3141325, 3252058, 3092880,
  // 3342755, 3048871, 3251065, 3386068, 3077956, 3035234, 3357502, 3316892,
  // 3075842, 3359784, 3140381, 3324608, 2787342, 3342776, 375797, 271787, 3329572,
  // 2995097, 3219191, 3154632, 3378228, 3183376, 3066281, 3339302, 399084, 126274,
  // 3384201, 3082235, 3206405, 3251474, 174242, 2789030, 3110021, 3360239,
  // 3057306, 3352426, 3208592, 3367824, 3341160, 3134486, 3383551, 3076472,
  // 3085531, 451119, 482654, 2745257, 3324599, 3140472, 3333921, 3124304, 3371969,
  // 3079581, 3377618, 3203268, 3145117, 3218788, 3040501, 198191, 381779, 2650671,
  // 403079, 277548, 3369395, 3093041, 136212, 593876, 3348675, 3065155, 3180393,
  // 3362927, 3065707, 3382555, 119350, 29860, 283611, 2755344, 2563174, 139531,
  // 388989, 2849741, 3374385, 3047668, 3226850, 3331649, 3207217, 3269203,
  // 3377166, 3386508, 3389542, 3049663, 3359904, 3077593, 3366532, 3089933,
  // 3388488, 3033255, 541519, 3055136, 3097977, 3375742, 3364390, 3172731,
  // 2632944, 321707, 3128007, 3373141, 3235706, 3367737, 3383670, 3060551,
  // 3363184, 3031189, 176775, 2737052, 2828024, 277761, 3211341, 3162443, 3383332,
  // 3112647, 3056228, 3397454, 3106588, 3146871, 3077050, 3374396, 3327842,
  // 3190462, 3149569, 3218188, 3335984, 3056157, 3060559, 345325, 3211318,
  // 3162468, 163297, 3018113, 2775908, 3179543, 3265096, 3147002, 3126812,
  // 3322252, 141295, 417633, 2595451, 204748, 3380912, 3164765, 3218640, 3145136,
  // 3112387, 3218247, 3145133, 3218603, 3097069, 3388384, 3386943, 3094186,
  // 3118015, 3147473, 3191366, 3162722, 3344313, 3330165, 3218730, 3124694,
  // 3370710, 3049700, 3218756, 3119992, 3048207, 206787, 2832, 155002, 3280985,
  // 3335001, 3299594, 3207299, 3113349, 3245582, 3222590, 3152149, 3183251,
  // 3050539, 3328831, 3087749, 2975426, 3346345, 3077520, 3369090, 3093610,
  // 3266914, 3268344, 3145222, 3374717, 3044137, 3219080, 3127918, 3191018,
  // 3334748, 527560, 155751, 3098126, 3320812, 3305213, 3044284, 2645553, 237263,
  // 3059724, 3372899, 3049571, 3260665, 3285501, 3366419, 3175412, 3358601,
  // 3200926, 3348736,
];

const yknListesi = [
  99005877892, 99062663988,
  // 98776018152, 98776018152, 98869033208, 98869033208, 99000176068, 99000176068,
  // 99004070256, 99004070256, 99005877892, 99005877892, 99006998640, 99006998640,
  // 99007849668, 99007849668, 99011517362, 99011517362, 99016685172, 99016685172,
  // 99021253922, 99021253922, 99024463816, 99024463816, 99029926804, 99029926804,
  // 99041517950, 99041517950, 99042629584, 99042629584, 99043001006, 99043001006,
  // 99043203684, 99043203684, 99043209310, 99043209310, 99045157640, 99045157640,
  // 99046006060, 99046006060, 99049000102, 99049000102, 99049158162, 99049158162,
  // 99051856452, 99051856452, 99054682058, 99054682058, 99056499630, 99056499630,
  // 99062663988, 99062663988, 99074364248, 99074364248, 99077045540, 99077045540,
  // 99079026608, 99079026608, 99085456130, 99085456130, 99086185084, 99086185084,
  // 99101139924, 99101139924, 99109252052, 99109252052, 99118130754, 99118130754,
  // 99125990846, 99125990846, 99136012988, 99136012988, 99136448442, 99136448442,
  // 99139077724, 99139077724, 99146186464, 99146186464, 99150175478, 99150175478,
  // 99151110232, 99151110232, 99155425134, 99155425134, 99160344444, 99160344444,
  // 99162057076, 99162057076, 99167904252, 99167904252, 99189226882, 99189226882,
  // 99195270282, 99195270282, 99196456098, 99196456098, 99198923796, 99198923796,
  // 99201929944, 99201929944, 99203490916, 99203490916, 99210342550, 99210342550,
  // 99214079438, 99214079438, 99222479060, 99222479060, 99226945882, 99226945882,
  // 99229364048, 99229364048, 99233441858, 99233441858, 99239440190, 99239440190,
  // 99239456962, 99239456962, 99245221318, 99245221318, 99248857316, 99248857316,
  // 99254652226, 99254652226, 99254903922, 99254903922, 99257188616, 99257188616,
  // 99257340830, 99257340830, 99268001836, 99268001836, 99274179390, 99274179390,
  // 99280066516, 99280066516, 99283318766, 99283318766, 99297894096, 99297894096,
  // 99298370254, 99298370254, 99304442746, 99304442746, 99315919466, 99315919466,
  // 99325661416, 99325661416, 99327364902, 99327364902, 99336655152, 99336655152,
  // 99339461958, 99339461958, 99339602078, 99339602078, 99347007278, 99347007278,
  // 99349357166, 99349357166, 99352325862, 99352325862, 99352836870, 99352836870,
  // 99356589598, 99356589598, 99381677178, 99381677178, 99384332630, 99384332630,
  // 99391085802, 99391085802, 99408167644, 99408167644, 99409545342, 99409545342,
  // 99416658738, 99416658738, 99423620308, 99423620308, 99433234434, 99433234434,
  // 99441191200, 99441191200, 99442797876, 99442797876, 99445773952, 99445773952,
  // 99446061256, 99446061256, 99446850690, 99446850690, 99461958494, 99461958494,
  // 99469024924, 99469024924, 99470065640, 99470065640, 99480653240, 99480653240,
  // 99489840078, 99489840078, 99491835390, 99491835390, 99505158552, 99505158552,
  // 99507888228, 99507888228, 99515891524, 99515891524, 99517003666, 99517003666,
  // 99518384726, 99518384726, 99519182598, 99519182598, 99519367650, 99519367650,
  // 99527826828, 99527826828, 99529633264, 99529633264, 99550020392, 99550020392,
  // 99556011028, 99556011028, 99566907236, 99566907236, 99571868126, 99571868126,
  // 99573170562, 99573170562, 99575014932, 99575014932, 99582867262, 99582867262,
  // 99586105902, 99586105902, 99595009826, 99595009826, 99595017500, 99595017500,
  // 99599414336, 99599414336, 99601136904, 99601136904, 99602281108, 99602281108,
  // 99605548130, 99605548130, 99605774164, 99605774164, 99622040204, 99622040204,
  // 99625010686, 99625010686, 99628073374, 99628073374, 99634022656, 99634022656,
  // 99641044412, 99641044412, 99644690760, 99644690760, 99644793034, 99644793034,
  // 99644869814, 99644869814, 99653407328, 99653407328, 99655361598, 99655361598,
  // 99661776102, 99661776102, 99671152842, 99671152842, 99679014982, 99679014982,
  // 99680718558, 99680718558, 99680900786, 99680900786, 99682002174, 99682002174,
  // 99696324200, 99696324200, 99701631668, 99701631668, 99709456560, 99709456560,
  // 99711814426, 99711814426, 99712100672, 99712100672, 99712118806, 99712118806,
  // 99713535428, 99713535428, 99717147320, 99717147320, 99718558798, 99718558798,
  // 99720950900, 99720950900, 99730916408, 99730916408, 99738213158, 99738213158,
  // 99738881968, 99738881968, 99747479286, 99747479286, 99748011256, 99748011256,
  // 99748865422, 99748865422, 99757013876, 99757013876, 99769332828, 99769332828,
  // 99773635076, 99773635076, 99786735510, 99786735510, 99790080002, 99790080002,
  // 99796004958, 99796004958, 99796939236, 99796939236, 99798635556, 99798635556,
  // 99798911452, 99798911452, 99804635396, 99804635396, 99813782210, 99813782210,
  // 99817395720, 99817395720, 99819852696, 99819852696, 99823237564, 99823237564,
  // 99825106202, 99825106202, 99830968406, 99830968406, 99844735414, 99844735414,
  // 99856418336, 99856418336, 99859012418, 99859012418, 99865088070, 99865088070,
  // 99871623746, 99871623746, 99874333444, 99874333444, 99878753354, 99878753354,
  // 99890417692, 99890417692, 99897648662, 99897648662, 99900429912, 99900429912,
  // 99905048026, 99905048026, 99905227520, 99905227520, 99914614700, 99914614700,
  // 99916859130, 99916859130, 99921030586, 99921030586, 99933873348, 99933873348,
  // 99933882708, 99933882708, 99940006838, 99940006838, 99941485526, 99941485526,
  // 99942511156, 99942511156, 99949001674, 99949001674, 99956891152, 99956891152,
  // 99965811424, 99965811424, 99993634170, 99993634170, 99994457006, 99994457006,
  // 99996995308, 99996995308,
];
const query = {
  pageSize: 100,
  pageNumber: 1,
  allHistories: false,
  izinAktifMi: null,
  referansNo: "",
  yabanciKimlikNo: "",

  ad: "",
  soyad: "",
  anaAdi: "",
  babaAdi: "",
  pasaportNo: "",
  dogumTarihi: "",
  isyeriSgkTescilNumarasi: "",
  isyeriUnvani: "",
  inBasvuruNoList: [],
  notInBasvuruNoList: [],
  inUyrukIdList: [],
  notInUyrukIdList: [],
  inBasvuruTipiList: [],
  notInBasvuruTipiList: [],
  inBasvuruTuruList: [],
  notInBasvuruTuruList: [],
  inCalismaIzniTuruList: [],
  notInCalismaIzniTuruList: [],
  inCinsiyetList: [],
  notInCinsiyetList: [],
  inEgitimDurumuList: [],
  notInEgitimDurumuList: [],
  inFirmaTipiList: [],
  notInFirmaTipiList: [],
  inGeciciKorumaStatusuList: [],
  notInGeciciKorumaStatusuList: [],
  inIslemTipiList: [],
  notInIslemTipiList: [],
  izinDurumuList: [],
  notInIzinDurumuList: [],
  inMedeniHalList: [],
  notInMedeniHalList: [],
  inPasaportTuruList: [],
  notInPasaportTuruList: [],
  inSermayeYapisiList: [],
  notInSermayeYapisiList: [],
  inTurkceSeviyesiList: [],
  notInTurkceSeviyesiList: [],
};

type queryType = typeof query;

const verileriAl = async (query: any, bn: number[]) => {
  const verileriGonder: any = [];
  query.yabanciKimlikNo = null;
  for (let i = 0; i < bn.length; i++) {
    query.yabanciKimlikNo = bn[i];
    const gelenVeri = await fetch(
      "https://services.csgb.gov.tr/workpernet/get-filtered-work-permit-data",
      {
        method: "POST",

        headers: {
          ApiKey: "d8994824-a876-458c-bae6-44g58c357aa9",
          "Content-Type": "application/json",
        },
        body: JSON.stringify(query),
      }
    ).then((response) => response.json());
    verileriGonder.push(gelenVeri);
  }
  console.log(verileriGonder);
  return verileriGonder;

  //.then((data) => console.log(data));
  //const jsonData = await gelenVeri.json();
  // console.log(jsonData);
};



<div className="flex flex-col">
        <div className="overflow-x-auto sm:-mx-6 lg:-mx-8">
          <div className="inline-block min-w-full py-2 sm:px-6 lg:px-8">
            <div className="overflow-hidden">
              <table className="min-w-full text-center text-sm font-light text-surface dark:text-white">
                <thead className="border-b border-neutral-200 font-medium dark:border-white/10">
                  <tr>
                    <th scope="col" className="px-6 py-4">
                      YKN
                    </th>
                    <th scope="col" className="px-6 py-4">
                      Başvuru No
                    </th>
                    <th scope="col" className="px-6 py-4">
                      İzin Başlangıç Tarihi
                    </th>
                    <th scope="col" className="px-6 py-4">
                      İzin Bitiş Tarihi
                    </th>
                  </tr>
                </thead>
                <tbody>
                  {viewList.map((k: any) => (
                    <>
                      {k.data.content.map((a: any, b: any) => (
                        <tr>
                          <td
                            className="whitespace-nowrap px-6 py-4 font-medium"
                            key={b}
                          >
                            {a.yabanciKimlikNumarasi}

                            <br />
                          </td>
                          <td
                            className="whitespace-nowrap px-6 py-4 font-medium"
                            key={b}
                          >
                            {a.basvuruNo}
                            <br />
                          </td>
                          <td
                            className="whitespace-nowrap px-6 py-4 font-medium"
                            key={b}
                          >
                            {format(a.onayVerilenBaslangicTarihi, "dd/MM/yyyy")}
                            <br />
                          </td>
                          <td
                            className="whitespace-nowrap px-6 py-4 font-medium"
                            key={b}
                          >
                            {format(a.onayVerilenBitisTarihi, "dd/MM/yyyy")}

                            <br />
                          </td>
                        </tr>
                      ))}
                    </>
                  ))}
                </tbody>
              </table>
            </div>
          </div>
        </div>
      </div> 